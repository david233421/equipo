<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OFeRDUURx27q4iI0IiICIiAiIgIiIP/Z
</value>
  </data>
</root>